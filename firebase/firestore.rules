rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /{document=**} {
    	allow read, write: if false;
    }

  	function isAdmin() {
  	  return request.auth.uid == "gwPMgUwQyNWMI8LpMBIaJcDvXPc2"
  	}
    
    function emailVerified() {
    	return request.auth.token.email_verified;
    }
    
    function matchesRequestUserId(userId) {
    	return request.auth.uid == userId;
    }
  	
    match /ask-for-help/{askForHelpId} {
      // Everyone can read the help requests
      allow get, list: if true;
      // Admins can delete everyones post or the user can delete his/her own
      allow delete: if matchesRequestUserId(resource.data.d.uid) || isAdmin();
      // Posts can only be created if the email is verfied and the user creates a post for himself
      allow create: if emailVerified() && matchesRequestUserId(request.resource.data.d.uid);
      
      // Function to get parent entry
      function askForHelpData() {
        return get(/databases/$(database)/documents/ask-for-help/$(askForHelpId)).data
      }
      
      match /offer-help/{offerHelpId} {
      	// Everyone can answer a request
        allow create: if true;
        // Only the admin and the user who inserted the request can read the responses
        allow get, list: if matchesRequestUserId(askForHelpData().d.uid) || isAdmin();
          // Users can only delete their own requests responses
        allow delete: if matchesRequestUserId(askForHelpData().d.uid);
      }
    }
    match /notifications/{notificationId} {
      // Only users with verified emails can create notification listeners for themselfs
      allow create: if emailVerified() && matchesRequestUserId(request.resource.data.d.uid);
      // Users can only see their own notifications
      allow get, list: if matchesRequestUserId(resource.data.d.uid) || isAdmin();
      // Users can only delete their own notifications
      allow delete: if matchesRequestUserId(resource.data.d.uid);
    }
    match /deleted/{deleteId} {
      // Users can create deleted requests in their own name
      allow create: if matchesRequestUserId(request.resource.data.d.uid) || isAdmin();
    }
    match /stats/{statsId} {
      // everyone can read the summarized stats
      allow read: if true;
    }
    match /users/{userId} {
      // User can only create their own entry
      allow create: if matchesRequestUserId(request.resource.id);
    }
    match /reported-posts/{reportedPostId} {
      // Users can only report requests in their own name
      allow create: if matchesRequestUserId(request.resource.data.uid);
    }
    match /solved-posts/{solvedPostId} {
      // Users can only see their own completed requests
      allow get, list: if matchesRequestUserId(resource.data.d.uid);
      // Users can only move their own requests to the solved collection
      allow create: if matchesRequestUserId(request.resource.data.d.uid);
      // Users can only delete their own solved requests
      allow delete: if matchesRequestUserId(resource.data.d.uid);
      
      // Function to get the parent entry
      function solvedPostData() {
        return get(/databases/$(database)/documents/solved-posts/$(solvedPostId)).data
      }
      
      match /offer-help/{offerHelpId} {
        // Users can only see responses to their solved requests
        allow create: if matchesRequestUserId(solvedPostData().d.uid);
        // Users can only read answers to their own solved requests
        allow get, list: if matchesRequestUserId(solvedPostData().d.uid);
        // Users can only delete their own solved requests responses
        allow delete: if matchesRequestUserId(solvedPostData().d.uid);
      }
    }
    match /geo-data/{locationId} {
      // everyone can read the geodata
      allow read: if true;
    }
  }
}